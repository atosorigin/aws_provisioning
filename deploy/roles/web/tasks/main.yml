---    
  - name: Stop Application
    service: name=fipretail state=stopped
    ignore_errors: yes

  - name: Execute apt-get
    apt: name={{item}} state=present
    with_items : 
      - node
      - npm
      - git
    when: ansible_os_family == 'Debian'

  - name: Install EPEL repo.
    yum:
      name: "{{ epel_repo_url }}"
      state: present
    when: ansible_os_family == 'RedHat'

  - name: Import EPEL GPG key.
    rpm_key:
      key: "{{ epel_repo_gpg_key_url }}"
      state: present
    when: ansible_os_family == 'RedHat'

  - name: Execute yum install
    yum: name={{item}} state=present enablerepo=epel
    with_items : 
      - nodejs
      - npm
      - git
      - python
      - libselinux-python
    when: ansible_os_family == 'RedHat'
    tags: ignore

  - name: Create group
    group: name={{group}} state=present
  - name: Create Application User 
    user: name={{user}} system=yes comment="FIP Retail User" group={{group}} password="povAS.1K8ELrE"
  # Fully quoted because of the ': ' on the line. See the Gotchas in the Ansible YAML docs.
  - lineinfile: "dest=/etc/sudoers state=present regexp='^%{{user}}' line='%{{user}} ALL=(ALL) NOPASSWD: ALL'"

  - name: Appending your ~/.ssh/id_rsa.pub key to the fiplifeusr demo user 
    authorized_key: user={{user}} key="{{ lookup('file', '~/.ssh/id_rsa.pub') }}"

  - name: Create Application Folder
    file: path={{basedir}}{{project_name}}_{{buildno}} owner={{user}} group=web mode=0755 state=directory


  - name: Untar file
    unarchive : src=../../../../deployment_{{buildno}}.tar.gz dest={{basedir}}{{project_name}}_{{buildno}} copy=yes group=web owner={{user}}

    # create a directory if it doesn't exist
  - name: Remove directory
    file: path="{{basedir}}{{project_name}}" state=absent

  - name: Replace SymLink
    file: src="{{basedir}}{{project_name}}_{{buildno}}" dest="{{basedir}}{{project_name}}" owner={{user}} group=web state=link force=yes
  - name: Add upstart conf
    template: src=fipretail.conf dest=/etc/init/fipretail.conf
    when: ansible_os_family == 'Debian'
  - name: Add init.d conf
    template: src=fipretail_redhat.service dest=/etc/init.d/fipretail mode=u+rwx
    when: ansible_os_family == 'RedHat'


  - name: Run migrations down
    command : node {{basedir}}{{project_name}}/node_modules/mongo-migrate/index.js -runmm  -c {{basedir}}{{project_name}} down
    ignore_errors: yes
    when: ansible_os_family == 'RedHat'
    tags: ignore
  - name: Run migrations up
    command : node {{basedir}}{{project_name}}/node_modules/mongo-migrate/index.js -runmm  -c {{basedir}}{{project_name}} up
    ignore_errors: yes
    when: ansible_os_family == 'RedHat'
  - name: Run migrations down
    command : "nodejs {{basedir}}{{project_name}}/node_modules/mongo-migrate/index.js -runmm  -c {{basedir}}{{project_name}} down"
    ignore_errors: no
    when: ansible_os_family == 'Debian'
    tags: ignore
  - name: Run migrations up
    command : "nodejs {{basedir}}{{project_name}}/node_modules/mongo-migrate/index.js -runmm  -c {{basedir}}{{project_name}} up"
    ignore_errors: no
    when: ansible_os_family == 'Debian'
  - name: Clear up older versions of Folder
    file: dest={{basedir}}{{project_name}}_{{ item }} state=absent
    with_sequence: start=0 end={{(buildno | int - 3 < 0) | ternary(0 , buildno | int - 3)}} stride=1
  - name: Start Application
    service: name=fipretail state=restarted
